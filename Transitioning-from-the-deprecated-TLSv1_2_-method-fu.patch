From d60ecd83847091c902b280c0c5a7f8bd47eb7d03 Mon Sep 17 00:00:00 2001
From: allen clement <agc@google.com>
Date: Wed, 14 Jun 2017 10:21:57 +0200
Subject: [PATCH 1/5] Transitioning from the deprecated TLSv1_2_*method
 functions to instead use TLS_*method as appropriate and follow up with a
 set_min/max version call.

TLSv1_2_*methods are deprecated in OpenSSL 1.1.

This is part 2 of 2 for addressing https://github.com/grpc/grpc/issues/10589
---
 src/core/tsi/ssl_transport_security.c | 12 ++++++++----
 test/core/handshake/client_ssl.c      |  6 ++++--
 test/core/handshake/server_ssl.c      |  6 ++++--
 3 files changed, 16 insertions(+), 8 deletions(-)

diff --git a/src/core/tsi/ssl_transport_security.c b/src/core/tsi/ssl_transport_security.c
index 1fd65928f9..b80ba8124e 100644
--- a/src/core/tsi/ssl_transport_security.c
+++ b/src/core/tsi/ssl_transport_security.c
@@ -1278,8 +1278,10 @@ tsi_result tsi_create_ssl_client_handshaker_factory(
   *factory = NULL;
   if (pem_root_certs == NULL) return TSI_INVALID_ARGUMENT;
 
-  ssl_context = SSL_CTX_new(TLSv1_2_method());
-  if (ssl_context == NULL) {
+  ssl_context = SSL_CTX_new(TLS_method());
+  if (ssl_context == NULL ||
+      !SSL_CTX_set_min_proto_version(ssl_context, TLS1_2_VERSION) ||
+      !SSL_CTX_set_max_proto_version(ssl_context, TLS1_2_VERSION)){
     gpr_log(GPR_ERROR, "Could not create ssl context.");
     return TSI_INVALID_ARGUMENT;
   }
@@ -1386,8 +1388,10 @@ tsi_result tsi_create_ssl_server_handshaker_factory_ex(
 
   for (i = 0; i < num_key_cert_pairs; i++) {
     do {
-      impl->ssl_contexts[i] = SSL_CTX_new(TLSv1_2_method());
-      if (impl->ssl_contexts[i] == NULL) {
+      impl->ssl_contexts[i] = SSL_CTX_new(TLS_method());
+      if (impl->ssl_contexts[i] == NULL ||
+          !SSL_CTX_set_min_proto_version(impl->ssl_contexts[i], TLS1_2_VERSION) ||
+          !SSL_CTX_set_max_proto_version(impl->ssl_contexts[i], TLS1_2_VERSION)) {
         gpr_log(GPR_ERROR, "Could not create ssl context.");
         result = TSI_OUT_OF_RESOURCES;
         break;
diff --git a/test/core/handshake/client_ssl.c b/test/core/handshake/client_ssl.c
index de660fe1c4..7ad8f340e2 100644
--- a/test/core/handshake/client_ssl.c
+++ b/test/core/handshake/client_ssl.c
@@ -138,9 +138,11 @@ static void server_thread(void *arg) {
   SSL_load_error_strings();
   OpenSSL_add_ssl_algorithms();
 
-  const SSL_METHOD *method = TLSv1_2_server_method();
+  const SSL_METHOD *method = TLS_server_method();
   SSL_CTX *ctx = SSL_CTX_new(method);
-  if (!ctx) {
+  if (!ctx ||
+      !SSL_CTX_set_min_proto_version(ctx, TLS1_2_VERSION) ||
+      !SSL_CTX_set_max_proto_version(ctx, TLS1_2_VERSION)) {
     perror("Unable to create SSL context");
     ERR_print_errors_fp(stderr);
     abort();
diff --git a/test/core/handshake/server_ssl.c b/test/core/handshake/server_ssl.c
index 85a8b4de41..0a394d4432 100644
--- a/test/core/handshake/server_ssl.c
+++ b/test/core/handshake/server_ssl.c
@@ -140,9 +140,11 @@ static bool server_ssl_test(const char *alpn_list[], unsigned int alpn_list_len,
   SSL_load_error_strings();
   OpenSSL_add_ssl_algorithms();
 
-  const SSL_METHOD *method = TLSv1_2_client_method();
+  const SSL_METHOD *method = TLS_client_method();
   SSL_CTX *ctx = SSL_CTX_new(method);
-  if (!ctx) {
+  if (!ctx ||
+      !SSL_CTX_set_min_proto_version(ctx, TLS1_2_VERSION) ||
+      !SSL_CTX_set_max_proto_version(ctx, TLS1_2_VERSION)) {
     perror("Unable to create SSL context");
     ERR_print_errors_fp(stderr);
     abort();
-- 
2.13.6

